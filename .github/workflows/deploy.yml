name: Deployment example

on:
  push:
    branches:
      - dev
      - rec
      - main

  workflow_dispatch:

jobs:
  checks:
    name: Build
    runs-on: ubuntu-latest
    env:
      TURBO_RUN_FILTER: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
    outputs:
      changed-app: ${{ steps.changed-app.outputs.result }}
      changed-docs: ${{ steps.changed-docs.outputs.result }}
      changed-cron: ${{ steps.changed-cron.result }}
      changed-landing: ${{ steps.changed-landing.outputs.result }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Changeset
        id: changeset
        # 1. We need the 'output' of a turbo dry-run to get a json with all affected packages of these run.
        # 2. The multi line json string is transformed to a single line string.
        # 3. The single line json string is set to an 'output' (or result) of this step.
        run: |
          content=`npm run build -silent -- --filter=$TURBO_RUN_FILTER --dry-run=json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "result:$content" >> "$GITHUB_OUTPUT"
          echo "Filter: $TURBO_RUN_FILTER" >> $GITHUB_STEP_SUMMARY
          echo "Changeset: $content" >> $GITHUB_STEP_SUMMARY
      - name: Changed app?
        id: changed-app
        # 1. Using the 'output' of the 'changeset' step inside the `if` to check if the specific app has changed
        # 2. When `true`, we store it in the 'output' of the current step.
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'app') }}
        run: |
          echo "result=true" >> $GITHUB_OUTPUT
      - name: Changed docs?
        id: changed-docs
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'docs') }}
        run: |
          echo "result=true" >> $GITHUB_OUTPUT
      - name: Changed cron?
        id: changed-cron
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'cron') }}
        run: |
          echo "result=true" >> $GITHUB_OUTPUT
      - name: Changed landing?
        id: changed-landing
        if: ${{ contains(fromJSON(steps.changeset.outputs.result).packages, 'landing') }}
        run: |
          echo "result=true" >> $GITHUB_OUTPUT

  deploy_app:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ needs.checks.outputs.changed-app == 'true' }}
    steps:
      - name: Deploy app
        run: echo "Deploying app"

  deploy_docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ needs.checks.outputs.changed-docs == 'true' }}
    steps:
      - name: Deploy docs
        run: echo "Deploying docs"

  deploy_cron:
    name: Deploy cron
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ needs.checks.outputs.changed-cron == 'true' }}
    steps:
      - name: Deploy cron
        run: echo "Deploying cron"

  deploy_landing:
    name: Deploy landing
    runs-on: ubuntu-latest
    needs: checks
    if: ${{ needs.checks.outputs.changed-landing == 'true' }}
    steps:
      - name: Deploy landing
        run: echo "Deploying landing"
