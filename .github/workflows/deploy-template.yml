name: deployment workflow

on:
  push:
    branches:
      # Change this to enable the workflow
      - never

  workflow_dispatch:

jobs:
  security:
    name: TruffleHog Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  run:
    runs-on: ubuntu-latest
    needs: security

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create env
        run: |
          touch .env
          echo ENV=production >> .env

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_KEY }}
          registry: rg.fr-par.scw.cloud/namespace-main

      - name: Build the docker image
        run: |
          # Main application
          docker build -t rg.fr-par.scw.cloud/namespace-main/main-application-image:latest .
          docker push rg.fr-par.scw.cloud/namespace-main/main-application-image:latest

          # Cron
          docker build -t rg.fr-par.scw.cloud/namespace-main/cron-image:latest -f cron/Dockerfile .
          docker push rg.fr-par.scw.cloud/namespace-main/cron-image:latest

      - name: Push docker compose
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

          ssh -p ${{ vars.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "mkdir -p ${{ vars.SOURCE_PATH }}"
          scp -P ${{ vars.SSH_PORT }} docker/docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ vars.SOURCE_PATH }}/docker-compose.yml
          scp -P ${{ vars.SSH_PORT }} .env ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ vars.SOURCE_PATH }}/.env

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ vars.SSH_PORT }}
          envs: REGISTRY_USERNAME, REGISTRY_KEY
          script: |
            cd ${{ vars.SOURCE_PATH_ }}
            set -a
            source .env
            docker login rg.fr-par.scw.cloud/namespace-main -u '${{ vars.REGISTRY_USERNAME }}' -p '${{ secrets.REGISTRY_KEY }}'
            docker compose pull
            docker system prune -f
            docker compose up -d

      - name: Create Sentry release
        uses: getsentry/action-release@v1.7.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
