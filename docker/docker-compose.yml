version: "3.8"

services:
  app:
    image: DOCKER_DEPLOY_APP_IMAGE
    container_name: #{PROJECT_NAME}#_app
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    ports:
      - "3000:3000"

  crons:
    image: DOCKER_DEPLOY_CRONS_IMAGE
    container_name: #{PROJECT_NAME}#_crons
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"

  docs:
    image: DOCKER_DEPLOY_DOCS_IMAGE
    container_name: #{PROJECT_NAME}#_docs
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    ports:
      - "3001:3000"
    #? You can comment the volumes section if you are not using the static files
    volumes:
      - .:/docs/.docusaurus

  landing:
    image: DOCKER_DEPLOY_LANDING_IMAGE
    container_name: #{PROJECT_NAME}#_landing
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    ports:
      - "3002:3000"

  db:
    image: postgres:latest
    container_name: #{PROJECT_NAME}#_db
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}

    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    ports:
      - "5432:5432"

  redis:
    restart: unless-stopped
    container_name: #{PROJECT_NAME}#_redis
    image: redis:latest
    command: /bin/sh -c "redis-server --requirepass ${REDIS_PASSWORD}"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

volumes:
  postgres-data:
  redis-data:
